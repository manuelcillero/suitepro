de:
  activemodel:
    errors:
      models:
        move_repository_form:
          attributes:
            base:
              identifier_empty: Repository ohne Kennung ist nicht verschiebbar
              identifier_taken: Repository Kennung ist schon in Verwendung
              wrong_target_project: Zielprojekt stimmt mit Quellprojekt überein
  activerecord:
    errors:
      models:
        gitolite_public_key:
          attributes:
            key:
              corrupted: scheint beschädigt zu sein.
              taken_by_you: 'wird bereits von Dir verwendet als Benutzer "%{name}".'
              taken_by_other: 'wird bereits verwendet von Benutzer "%{login}" als "%{name}".'
              taken_by_someone: wird bereits verwendet. Gehört einem anderen Benutzer (kontaktiere den Administrator für weitere Details).
              taken_by_gitolite_admin: wird bereits verwendet als Gitolite Administrator Key.
        project:
          attributes:
            identifier:
              invalid: "ungültige Kennung"
              taken: matches existing repository identifier
        repository_deployment_credential:
          attributes:
            base:
              invalid_key: "Öffentlicher Schlüssel muss ein Deployment Schlüssel sein"
              invalid_user: "Credential Owner darf sich vom Key Owner nicht unterscheiden"
        repository_git_config_key:
          attributes:
            key:
              invalid: "Falsches Schlüsselformat (es muss mindestens ein '.' vorhanden sein)"
        repository_mirror:
          attributes:
            base:
              nothing_to_push: "Muss mindestens ein Element enthalten, das zu pushen ist"
            explicit_refspec:
              bad_format: ist schlecht formatiert
              have_null_component: "kann nicht null erste Komponente haben (würde remote branch(es) entfernen)"
        repository/xitolite:
          attributes:
            base:
              blank_default_exists: "Kann das Respository nicht anlegen, da bereits ein leeres Repository existiert."
              invalid_options: "Du kannst eine README Datei nicht in einem Repository mit GitAnnex initialisieren"
            identifier:
              cannot_equal_project: "can not match the ID of an existing project"
              taken: "wird bereits verwendet."
              invalid: "ungültig"
              cannot_change: "kann nicht geändert werden"
  all_branches: Alle Branches
  all_references: Alle Refs
  all_tags: Alle TAGs
  button_clone: Klonen
  display_access_emphasis_html: "In the above patterns, <em>emphasized</em> components represent context-dependent elements."
  display_access_flat: "Eltern Projekte sind nicht in der URL enthalten, da das Repository in einem <em>Flat</em> Modus ist."
  display_access_hierarchical: "Eltern Projekte sind in der URL enthalten, da das Repository in einem  <em>Hierarchical</em> Modus ist."
  display_access_setup1_html: "Geh davon aus, dass <em>project1</em> das Elternprojekt von <em>project2</em>, und <em>project2</em> das Elternprojekt von <em>project3</em> ist."
  display_access_setup2_html: "Geh auch davon aus, dass das <em>project3</em> 2 Repositories hat: ein <em>default</em> Repository und ein <em>example</em> Repository."
  display_access_setup3_html: "Bezogen auf die aktuelle Konfiguration, hat Projekt <em>project3</em> folgende Optionen:"
  error_download_revision_no_such_commit: "Kein Commit %{commit}"
  error_project_not_found: "Kein Projekt mit dem Identifier gefunden"
  error_public_key_create_failed: Public key konnte nicht erzeugt werden.
  error_public_key_update_failed: Public key konnte nicht aktualisiert werden.
  error_repository_not_found: "Kein Repository mit dem Identifier gefunden"
  error_xitolite_repositories_disabled: "Gitolite Repositories sind deaktiviert, kann kein Repository erzeugen!"
  field_key: dieser Key
  field_mode: Modus
  field_perm: Zugriffsberechtigung
  field_split_payloads: Die globale payload in viele payloads aufteilen
  field_use_triggers: Verwende Triggers
  label_active_for: Aktiv seit
  label_all_projects_use_git: Git repositories für neue Projekte automatisch initialisieren?
  label_average_commit_per_day: Durchschnitt Commits pro Tag
  label_average_contributor_commits: Durchschnitt Commits pro Mitwirkenden
  label_backup_in_progress: Wird gespeichert...
  label_branch_path: Branch Path
  label_browse_repository: Browse Repository
  label_commit_plural: Commits
  label_commits_number: Anzahl Commits
  label_commits_per_day: Commits am Tag
  label_commits_per_hour: Commits in der Stunde
  label_commits_per_weekday: Commits an Wochentagen
  label_current_deploy_keys: Aktuelle Deployment Keys
  label_current_public_keys: Aktuelle Public Keys
  label_current_user_keys: Aktuelle Benutzer Keys
  label_cut_and_paste: Ausschneiden und einfügen des kompletten .pub File.
  label_debug: Debug
  label_default_domain_name: Default Domainname
  label_default_gitolite_hooks_url: Default URL
  label_default_repository: Standard Repository
  label_delete_from_recyle_bin: Alles im Papierkorb löschen
  label_delete_git_repositories: Git Repository löschen, wenn Projekt gelöscht wird?
  info_delete_git_repositories: (wird in den Papierkorb verschoben)
  label_delete_in_progress: Lösche...
  label_delete_warning: Warnung! Löschvorgang kann nicht rückgängig gemacht werden!
  label_deploy_key: Deployment Schlüssel
  label_deployment_credential_add: Deployment Credential hinzufügen
  label_deployment_credential_create_key_first: Deployment Key(s) nicht gefunden. Du solltest erst einen erzeugen.
  label_deployment_credential_create: Neue Deployment Credential erzeugen
  label_deployment_credential_delete_when_unused: Schlüssel entfernen, wenn unbenutzt?
  label_deployment_credential_delete: Deployment Credential löschen
  label_deployment_credential_edit: Deployment Credential bearbeiten
  label_deployment_credential_honored: Honored?
  label_deployment_credential_owner: Owner
  label_deployment_credential_public_key_file: Public Key Datei
  label_deployment_credential_public_key_name: Public Key Name
  label_deployment_credential_select_deploy_key: Deployment Key auswählen
  label_deployment_credentials: Deployment Credentials
  label_download_and_install_git: Download und installiere Git
  label_download_format: Herunterladen als
  label_download_select_format: Format auswählen
  label_empty_get: Empty GET
  label_empty_recycle_bin: Papierkorb leeren
  label_empty_repository: Repository leeren?
  label_enable_git_daemon: Git Daemon aktivieren
  label_enable_git_notify: Mailing-Liste aktivieren
  label_enable_go_url: GO URL aktivieren
  label_enable_protected_branches: Geschützte Branches aktivieren
  label_enable_public_repo: Repository öffentlich machen
  label_enable_smart_http: Smart HTTP Mode
  label_enable_smart_https: Smart HTTPS Mode
  label_enable_ssh_url: SSH URL aktivieren
  label_error: Fehler
  label_etcetera: etc
  label_example_repository: Beispiel Repository
  label_first_commit_date: Erster Commit
  label_flat: Flat
  label_flush_cache: Flush Git Cache?
  label_git_annex: GitAnnex
  label_git_config_email_desc: Wird als Autoren E-Mail in Commits verwendet
  label_git_config_email: Git Autor E-mail
  label_git_config_key_add: Git Config Key hinzufügen
  label_git_config_key_create: Neuen Git Config Key erzeugen
  label_git_config_key_delete: Git Config Key löschen
  label_git_config_key_edit: Git Config Key bearbeiten
  label_git_config_keys: Git Config Keys
  label_git_config_username_desc: Wird als Autor Name in Commits verwendet
  label_git_config_username: Git Autor Name
  label_git_daemon: Git Daemon
  label_git_key_type_config: Git Config Key
  label_git_key_type_option: Gitolite Option
  label_git_notification_prefix: Mailing Liste prefix
  label_git_notification_sender: Mailing Liste Absenderadresse
  label_git_notify: Git Benachrichtigungen
  label_git_objects_count: Git Objekte Zähler
  label_git_option_key_add: Gitolite Option hinzufügen
  label_git_option_keys: Gitolite Konfigurationsoptionen
  label_git_version: Git Version
  label_github_post: GitHub POST
  label_gitolite_access_config: Gitolite Access Konfiguration
  label_gitolite_banner: Gitolite banner
  label_gitolite_bin_dir: Gitolite binaries directory
  label_gitolite_cache_adapter_desc: Redmine neu starten, damit die Änderungen greifen.
  label_gitolite_cache_adapter: Cache Adapter
  label_gitolite_cache_config: Gitolite Cache Konfiguration
  label_gitolite_cache_max_elements: Max Cache Elemente
  label_gitolite_cache_max_size: "Max Cache Elemente, Größe"
  label_gitolite_cache_max_time: Max Cache Zeit
  label_gitolite_config_file: Gitolite Konfigurationsdatei
  label_gitolite_daemon_by_default: "Git Daemon Modus für neue Repositories standardmäßig aktivieren?"
  label_gitolite_documentation: Gitolite Dokumentation
  label_gitolite_download_revision_enabled: Aktiviere Git Revisions Download
  label_gitolite_global_config: Gitolite Global Konfiguration
  label_gitolite_global_storage_dir_desc: Relative zu Gitolite User Home
  label_gitolite_global_storage_dir: Gitolite repositories base path
  label_gitolite_hook_dirs_installed: Hook dirs installiert?
  label_gitolite_hook_untouched: Hook left unberührt
  label_gitolite_hooks_are_asynchronous: Run Hooks asynchron
  label_gitolite_hooks_config: Gitolite Hooks Konfiguration
  label_gitolite_hooks_debug: Run Hooks in Debug mode
  label_gitolite_hooks_installed: Hooks installiert?
  label_gitolite_hooks_namespace: Hooks Git Namespace
  label_gitolite_hooks_params_installed: Hooks Parameter installiert?
  label_gitolite_hooks_url: Hooks URL
  label_gitolite_http_by_default: Smart HTTP Modus für neue Repositories standardmäßig aktivieren?
  label_gitolite_identifier_prefix_desc: Wird zur Generierung von SSH Keys Identifiers verwendet
  label_gitolite_identifier_prefix: Gitolite prefix
  label_gitolite_identifier_strip_user_id_desc: Redmine neu starten, damit die Änderungen greifen.
  label_gitolite_identifier_strip_user_id: User ID von Gitolite identifier entfernen
  label_gitolite_lib_dir: Gitolite librairies directory
  label_gitolite_libgit2_version: libgit2 Version
  label_gitolite_local_code_dir: Gitolite non-core Hooks directory
  label_gitolite_log_level_desc: Redmine neu starten, damit die Änderungen greifen.
  label_gitolite_log_level: Gitolite Log Level
  label_gitolite_mailer_params_installed: Mailer Parameter installiert?
  label_gitolite_notify_by_default: "Enable 'Git Notifications' hook for new repositories by default?"
  label_gitolite_notify_config: Git Mailing Liste Konfiguration
  label_gitolite_notify_global_exclude: Git mailing list global exclude list
  label_gitolite_notify_global_include: Git mailing list global include list
  label_gitolite_notify_global_prefix: Git mailing list global prefix
  label_gitolite_notify_global_sender_address: Git mailing list global sender address
  label_gitolite_overwrite_existing_hooks: "Existierende Hooks überschreiben"
  label_gitolite_recycle_bin_dir_desc: Relative to Gitolite user home
  label_gitolite_recycle_bin_dir: Gitolite recycle bin base path
  label_gitolite_recycle_bin_expiration_time_desc: In Stunden
  label_gitolite_recycle_bin_expiration_time: Ablaufzeit für Repositories im Papierkorb
  label_gitolite_redmine_storage_dir_desc: Relative to Gitolite repositories base path
  label_gitolite_redmine_storage_dir: Subdirectory for Redmine-managed repositories
  label_gitolite_repository_count: Count of physical repositories in Gitolite
  label_gitolite_rescue: Gitolite Rescue
  label_gitolite_rugged_features: Rugged compiled features
  label_gitolite_server_host: SSH/Gitolite server host
  label_gitolite_server_port: SSH/Gitolite server port
  label_gitolite_ssh_config: Gitolite SSH Configuration
  label_gitolite_ssh_private_key: Gitolite SSH private key
  label_gitolite_ssh_public_key: Gitolite SSH public key
  label_gitolite_storage_config: Gitolite Storage Configuration
  label_gitolite_temp_dir_desc: Muss absolut sein
  label_gitolite_temp_dir: Temporary dir for lock file and data
  label_gitolite_use_sidekiq: Use Sidekiq to launch async jobs
  label_gitolite_user: Gitolite Username
  label_gitolite_version: Gitolite Version
  label_help_git_setup: Git Setup
  label_help_no_repo_rights: "Sorry, auf dieses Repository hast Du keinen Zugriff. Hier gibt es nichts für Dich zu tun."
  label_help_repository_clone: Klone Repository
  label_help_repository_setup_existing: Setup besthendes Repository
  label_help_repository_setup_new: Setup neues Repository
  label_hierarchical_organisation: Verzeichnis und URL Struktur für Redmine-managed Repositories
  label_hierarchical: hierarchisch
  label_http_access: HTTP Zugriff
  label_http_only: Nur HTTP
  label_http_server_domain: HTTP server domain
  label_http_server_subdir_desc: Relative to Redmine root url
  label_http_server_subdir: Unterverzeichnis für HTTP access
  label_https_access: HTTPS Zugriff
  label_https_and_http: HTTPS und HTTP
  label_https_only: Nur HTTPS
  label_https_server_domain_desc: Leer lassen, wenn es nicht verwendet wird
  label_https_server_domain: HTTPS Server Domain
  label_identifier_can_be_arbitrary_desc: (Kann jeder sinnvolle String sein)
  label_identifier_can_be_arbitrary: Identifier
  label_identifier_cannot_be_changed: Identifier<br/><em>(Kann nicht geändert werden)</em>
  label_info: Info
  label_init_repo_with_git_annex: Dieses Repository mit GitAnnex initialisieren
  label_init_repo_with_readme: Dieses Repository mit einer README initialisieren
  label_init_repositories_on_create: Automatisch Git Repositories mit einer README Datei initialisieren (à la Github)
  label_install_gitolite_hooks: Installiere Hooks!
  label_key_cannot_be_changed_please_create_new_key: 'Der Key kann nicht mehr geändert werden. Du kannst ihn jedoch löschen und einen Neuen erzeugen.'
  label_key_type: Öffentlicher Schlüsseltyp
  label_key: "Schlüssel (Key)"
  label_latest_commit_date: Neuster Commit
  label_main_git_repository: Main Git Repository
  label_mirror_add: Repository Mirror hinzufügen
  label_mirror_create: Repository Mirror erstellen
  label_mirror_delete: Repository Mirror löschen
  label_mirror_edit: Repository Mirror bearbeiten
  label_mirror_explicit_refspec: Explicit Reference Spec
  label_mirror_fast_forward: Fast Forward (Unforced)
  label_mirror_forced_update: Force Update Remote
  label_mirror_full_mirror: Complete Mirroring
  label_mirror_help: Mirrors müssen Schreibzugriff auf den folgenden Public Key gewähren
  label_mirror_include_all_branches: Push alle Branches
  label_mirror_include_all_tags: Push alle Tags
  label_mirror_push_fail: Fehlgeschlagen
  label_mirror_push_info_html: "Pushing changes to mirror <b>%{mirror_url}</b> : <span class=\"label label-%{status_css}\">%{status}</span>"
  label_mirror_push_mode: Mirror update mode
  label_mirror_push_output: Output
  label_mirror_push_sucess: Erfolgreich
  label_mirror_push_title: Push to mirror
  label_mirror_push: Push
  label_mirror_refspec: Refspec
  label_mirror_url_accepted_format: Erlaubtes URL format
  label_mirror: Mirror
  label_mirroring_keys_installed: Mirror keys installiert?
  label_mode: Mode
  label_move_repository: "Repository verschieben: '%{repo_name}'"
  label_my_public_keys: Meine öffentlichen Schlüssel
  label_need_help: Hilfe?
  label_no_public_keys: Keine öffentlichen Schlüssel definiert
  label_open_issue: Ticket öffnen
  label_path_directories: PATH directories
  label_permissions_header: Notwendige Berechtigungen
  label_post_receive_url_add: Post Receive URL hinzufügen
  label_post_receive_url_create: Repository Post-receive URL erstellen
  label_post_receive_url_delete: Repository Post-receive URL löschen
  label_post_receive_url_edit: Repository Post-receive URL bearbeiten
  label_post_receive_urls: Post Receive URLs
  label_protected_branch_add: Protected Branch hinzufügen
  label_protected_branch_create: Protected Branch erstellen
  label_protected_branch_delete: Protected Branch löschen
  label_protected_branch_edit: Protected branch bearbeiten
  label_protected_branch: Protected Branches
  label_protected_branches: Protected branches
  label_public_key_edit: Edit existing public key
  label_public_key_new: Enter new public key
  label_public_key: Öffentlicher Schlüssel
  label_public_keys: Öffentliche Schlüssel
  label_public_repo: Öffentliches Repository
  label_read_only_permission: RO
  label_read_write_permission: RW
  label_recycle_bin_content_size: Größe
  label_redmine_config: Redmine Konfiguration
  label_redmine_git_hosting_issue: Redmine Git Hosting - Open Issue
  label_redmine_git_hosting_wiki: Redmine Git Hosting - Wiki
  label_redmine_has_rw_access_on_all_repos: Redmine has RW access on all Gitolite repositories
  label_redmine_user: Redmine Benutzername
  label_regenerate_all_ssh_keys_desc: "This will regenerate SSH keys identifier."
  label_regenerate_all_ssh_keys_desc2: "This can be long : all SSH keys will be removed and re-added in Gitolite one by one."
  label_regenerate_all_ssh_keys: Regenerate all SSH keys ?
  label_repos_current_access_patterns: Current Repository Access Patterns
  label_repository_access_not_configured: Repository Zugriff ist nicht konfiguriert, bitte kontaktiere einen Administrator.
  label_repository_access_url: Repository access links
  label_repository_default_branch: Repository default branch
  label_repository_enabled_capabilities: Repository Enabled Capabilities
  label_repository_exists_in_gitolite: Repository exists in Gitolite
  label_repository_mirrors: Repository Mirrors
  label_repository_options: Repository Optionen
  label_repository_statistics_commits: Commits
  label_repository_statistics_contributors: Mitwirkende
  label_repository_statistics_global: Übersicht
  label_resync_all_projects: Resync alle Projekte?
  label_resync_all_ssh_keys: Resync alle SSH keys?
  label_see_other_repositories: Andere Repositories ansehen
  label_select_all: Alle auswählen
  label_smart_http: Smart HTTP
  label_sort_urls: (Sort urls)
  label_split_payloads: Splitte payloads
  label_ssh_access: SSH Zugriff
  label_ssh_keys_current_access_patterns: SSH keys Access Patterns
  label_ssh_server_domain: SSH server domain
  label_storage_directory: Storage directory
  label_sudo_gitolite_to_redmine_user: Git user is able to sudo to Redmine user?
  label_sudo_redmine_to_gitolite_user: Redmine user is able to sudo to Git user?
  label_tab_access: Zugriff
  label_tab_cache: Cache
  label_tab_config_file: Konfigurationsdatei
  label_tab_config_test: Config Test
  label_tab_gitolite_recycle_bin: Papierkorb
  label_tab_gitolite_rescue: Rescue
  label_tab_global: Global
  label_tab_hooks: Hooks
  label_tab_notify: Benachrichtigungen
  label_tab_redmine: Redmine
  label_tab_sidekiq_interface: Sidekiq
  label_tab_ssh: SSH
  label_tab_storage: Storage
  label_temp_dir_writeable: Temp directory writeable?
  label_this_urls_has_permissions: "Diese URL hat <span id=\"%{span_id}\"></span> Zugriff."
  label_total_commits: Anzahl Commits
  label_total_contributors: Anzahl Mitwirkende
  label_triggers: Triggers
  label_unique_repo_identifier: Repository identifiers sind global eindeutig?
  label_unknown_gitolite_version: Unbekannte Version
  label_use_triggers: Trigger verwenden
  label_user_key: User key
  label_user_list: Users allowed
  label_warn: Warning
  notice_deployment_credential_create_failed: Erstellung von Deployment Credential fehlgeschlagen
  notice_deployment_credential_created: Deployment Credential erfolgreich erstellt.
  notice_deployment_credential_deleted_with_key: Both Deployment Credential and Key were successfully deleted.
  notice_deployment_credential_deleted: Deployment Credential erfolgreich gelöscht.
  notice_deployment_credential_update_failed: Deployment Credential Update fehlgeschlagen.
  notice_deployment_credential_updated: Deployment Credential erfolgreich aktualisiert.
  notice_empty_repository: Leeres Repository. Verwende die nachfolgenden Anweisungen, um Git zu verwenden.
  notice_git_config_key_create_failed: Erstellung eines Git config key fehlgeschlagen
  notice_git_config_key_created: Git config key erfolgreich erstellt.
  notice_git_config_key_deleted: Git config key erfolgreich gelöscht.
  notice_git_config_key_update_failed: Git config key Update fehlgeschlagen.
  notice_git_config_key_updated: Git config key erfolgreich aktualisiert.
  notice_gitolite_extra_update_failed: Errors while updating options
  notice_gitolite_extra_updated: Options successfully updated
  notice_mirror_create_failed: Failed to create mirror.
  notice_mirror_created: Mirror was successfully created.
  notice_mirror_deleted: Mirror was successfully deleted.
  notice_mirror_update_failed: Failed to update mirror.
  notice_mirror_updated: Mirror was successfully updated.
  notice_post_receive_url_create_failed: Failed to create post-receive URL.
  notice_post_receive_url_created: Post-receive URL was successfully created.
  notice_post_receive_url_deleted: Post-receive URL was successfully deleted.
  notice_post_receive_url_update_failed: Failed to update post-receive URL.
  notice_post_receive_url_updated: Post-receive URL was successfully updated.
  notice_protected_branch_create_failed: Failed to create protected branch
  notice_protected_branch_created: Protected branch was successfully created.
  notice_protected_branch_deleted: Protected branch was successfully deleted.
  notice_protected_branch_update_failed: Failed to update protected branch
  notice_protected_branch_updated: Protected branch was successfully updated.
  notice_public_key_created: Public key <strong>%{title}</strong> erfolgreich erzeugt.
  notice_public_key_deleted: Public key <strong>%{title}</strong> erfolgreich gelöscht.
  notice_public_key_updated: Public key <strong>%{title}</strong> erfolgreich aktualisiert.
  permission_add_repository_xitolite_watchers: Watcher hinzufügen
  permission_create_gitolite_ssh_key: Erstelle SSH Schlüssel
  permission_create_repository_deployment_credentials: Deployment keys erstellen
  permission_create_repository_git_config_keys: Git config keys erstellen
  permission_create_repository_mirrors: Repository mirrors erstellen
  permission_create_repository_post_receive_urls: Post-receive URLs erstellen
  permission_create_repository_protected_branches: Protected branches erstellen
  permission_delete_repository_xitolite_watchers: Watcher löschen
  permission_download_git_revision: Download Git Revision Archive
  permission_edit_repository_deployment_credentials: Deployment keys bearbeiten
  permission_edit_repository_git_config_keys: Git config keys bearbeiten
  permission_edit_repository_mirrors: Repository mirrors bearbeiten
  permission_edit_repository_post_receive_urls: Post-receive URLs bearbeiten
  permission_edit_repository_protected_branches: Protected branches bearbeiten
  permission_push_repository_mirrors: Push changes to repository mirrors
  permission_view_repository_deployment_credentials: View deployment keys
  permission_view_repository_git_config_keys: View Git config keys
  permission_view_repository_mirrors: View repository mirrors
  permission_view_repository_post_receive_urls: View post-receive URLs
  permission_view_repository_protected_branches: View protected branches
  permission_view_repository_xitolite_watchers: View watchers
  protected_branches_reminder: Die obigen protected branches sind nicht aktiviert. Bitte aktiviere die Protected Branches in den Repository Einstellungen oben.
  redmine_git_hosting: Redmine Git Hosting
  select_other_keys: Andere keys
  text_gitolite_key_destroy_confirmation: "Sicher, dass Du den folgenden Schlüssel (Key) zerstören willst: %{title} ?"
  text_scm_command_not_available_git_hosting: SCM command nicht verfügbar. Bitte überprüfe die Einstellungen im Adminbereich des Redmine Git Hosting Plugin.
  label_install_hook_results: Install hook results
  label_repository_url_plural: Repository URLs
