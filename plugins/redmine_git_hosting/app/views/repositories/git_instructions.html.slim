#flash_warning.flash.warning = l :notice_empty_repository

- if @repository.urls_are_viewable?
  - content_for :header_tags do
    = stylesheet_link_tag 'application', plugin: 'redmine_git_hosting'

  .git_hosting_urls.box
    .container
      .row
        .col-md-8 style='vertical-align: middle;'
          = render 'common/git_urls', repository: @repository
        .col-md-4 style='text-align: right; vertical-align: middle;'

.box
  - if User.current.allowed_to? :view_changesets, @project
    h3
      = l :label_help_git_setup
      | :
    pre
      code.shell.syntaxhl
        = link_to l(:label_download_and_install_git), 'https://git-scm.com/download', class: 'external'
        br
        == render_shell_text "git config --global user.name \"#{User.current.name(:firstname_lastname)}\""
        br
        == render_shell_text "git config --global user.email #{User.current.mail || 'mail@example.com'}"
        - if !User.current.anonymous? && User.current.gitolite_public_keys.empty?
          br
          = link_to 'Upload SSH Public Key', public_keys_path

    - if User.current.allowed_to? :commit_access, @project
      #repository_setup
        h3
          = l :label_help_repository_setup_new
          | :
        pre
          code.shell.syntaxhl
            == render_shell_text "mkdir #{@repository.redmine_name}"
            br
            == render_shell_text "cd #{@repository.redmine_name}"
            br
            == render_shell_text 'git init'
            br
            == render_shell_text 'touch readme.txt'
            br
            == render_shell_text 'git add readme.txt'
            br
            == render_shell_text "git commit -m 'Initializing #{@repository.redmine_name} repository'"
            br
            ' git remote add origin
            span.git_url_access
            br
            == render_shell_text 'git push -u origin master'

        h3
          = l :label_help_repository_setup_existing
          | :
        pre
          code.shell.syntaxhl
            == render_shell_text 'cd existing_git_rep'
            br
            ' git remote add origin
            span.git_url_access
            br
            == render_shell_text 'git push -u origin master'

      h3
        = l :label_help_repository_clone
        | :
      pre
        code.shell.syntaxhl
          ' git clone
          span.git_url_access

  - else
    = l :label_help_no_repo_rights

- content_for :sidebar do
  h3 = l :label_repository_plural
  ul.repository.git
    - @repositories.sort.each do |repo|
      li class="#{'repository git' if repo.is_a?(Repository::Xitolite)}"
        = link_to_repository(repo, @repository)
        - if User.current.allowed_to?(:manage_repository, @project)
          '
          = link_to "(#{l(:label_settings)})", edit_repository_path(repo)

javascript:
  $(document).ready(function() { setGitUrlsInstructions('.git_url'); });
